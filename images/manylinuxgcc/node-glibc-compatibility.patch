diff -Nur node-v13.12.0-orig/deps/uv/src/unix/async.c node-v13.12.0/deps/uv/src/unix/async.c
--- node-v13.12.0-orig/deps/uv/src/unix/async.c	2020-03-26 20:00:00.000000000 +0000
+++ node-v13.12.0/deps/uv/src/unix/async.c	2020-04-10 05:23:14.416305152 +0000
@@ -33,10 +33,6 @@
 #include <string.h>
 #include <unistd.h>
 
-#ifdef __linux__
-#include <sys/eventfd.h>
-#endif
-
 static void uv__async_send(uv_loop_t* loop);
 static int uv__async_start(uv_loop_t* loop);
 
@@ -162,15 +158,6 @@
   len = 1;
   fd = loop->async_wfd;
 
-#if defined(__linux__)
-  if (fd == -1) {
-    static const uint64_t val = 1;
-    buf = &val;
-    len = sizeof(val);
-    fd = loop->async_io_watcher.fd;  /* eventfd */
-  }
-#endif
-
   do
     r = write(fd, buf, len);
   while (r == -1 && errno == EINTR);
@@ -193,18 +180,9 @@
   if (loop->async_io_watcher.fd != -1)
     return 0;
 
-#ifdef __linux__
-  err = eventfd(0, EFD_CLOEXEC | EFD_NONBLOCK);
-  if (err < 0)
-    return UV__ERR(errno);
-
-  pipefd[0] = err;
-  pipefd[1] = -1;
-#else
   err = uv__make_pipe(pipefd, UV__F_NONBLOCK);
   if (err < 0)
     return err;
-#endif
 
   uv__io_init(&loop->async_io_watcher, uv__async_io, pipefd[0]);
   uv__io_start(loop, &loop->async_io_watcher, POLLIN);
diff -Nur node-v13.12.0-orig/deps/uv/src/unix/core.c node-v13.12.0/deps/uv/src/unix/core.c
--- node-v13.12.0-orig/deps/uv/src/unix/core.c	2020-03-26 20:00:00.000000000 +0000
+++ node-v13.12.0/deps/uv/src/unix/core.c	2020-04-10 05:22:11.041456153 +0000
@@ -1016,7 +1016,7 @@
 
 
 int uv__dup2_cloexec(int oldfd, int newfd) {
-#if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__linux__)
+#if defined(__FreeBSD__) || defined(__NetBSD__)
   int r;
 
   r = dup3(oldfd, newfd, O_CLOEXEC);
diff -Nur node-v13.12.0-orig/deps/uv/src/unix/fs.c node-v13.12.0/deps/uv/src/unix/fs.c
--- node-v13.12.0-orig/deps/uv/src/unix/fs.c	2020-03-26 20:00:00.000000000 +0000
+++ node-v13.12.0/deps/uv/src/unix/fs.c	2020-04-10 05:49:16.569223321 +0000
@@ -206,8 +206,7 @@
 
 
 static ssize_t uv__fs_futime(uv_fs_t* req) {
-#if defined(__linux__)                                                        \
-    || defined(_AIX71)                                                        \
+#if defined(_AIX71)                                                        \
     || defined(__HAIKU__)
   /* utimesat() has nanosecond resolution but we stick to microseconds
    * for the sake of consistency with other platforms.
@@ -222,7 +221,8 @@
 #else
   return futimens(req->file, ts);
 #endif
-#elif defined(__APPLE__)                                                      \
+#elif defined(__linux__)                                                      \
+    || defined(__APPLE__)                                                     \
     || defined(__DragonFly__)                                                 \
     || defined(__FreeBSD__)                                                   \
     || defined(__FreeBSD_kernel__)                                            \
@@ -969,8 +969,7 @@
 
 
 static ssize_t uv__fs_utime(uv_fs_t* req) {
-#if defined(__linux__)                                                         \
-    || defined(_AIX71)                                                         \
+#if defined(_AIX71)                                                            \
     || defined(__sun)                                                          \
     || defined(__HAIKU__)
   /* utimesat() has nanosecond resolution but we stick to microseconds
@@ -982,7 +981,8 @@
   ts[1].tv_sec  = req->mtime;
   ts[1].tv_nsec = (uint64_t)(req->mtime * 1000000) % 1000000 * 1000;
   return utimensat(AT_FDCWD, req->path, ts, 0);
-#elif defined(__APPLE__)                                                      \
+#elif defined(__linux__)                                                      \
+    || defined(__APPLE__)                                                     \
     || defined(__DragonFly__)                                                 \
     || defined(__FreeBSD__)                                                   \
     || defined(__FreeBSD_kernel__)                                            \
diff -Nur node-v13.12.0-orig/deps/uv/src/unix/linux-core.c node-v13.12.0/deps/uv/src/unix/linux-core.c
--- node-v13.12.0-orig/deps/uv/src/unix/linux-core.c	2020-03-26 20:00:00.000000000 +0000
+++ node-v13.12.0/deps/uv/src/unix/linux-core.c	2020-04-10 05:28:03.671058678 +0000
@@ -86,16 +86,8 @@
 int uv__platform_loop_init(uv_loop_t* loop) {
   int fd;
 
-  /* It was reported that EPOLL_CLOEXEC is not defined on Android API < 21,
-   * a.k.a. Lollipop. Since EPOLL_CLOEXEC is an alias for O_CLOEXEC on all
-   * architectures, we just use that instead.
-   */
-#if defined(__ANDROID_API__) && __ANDROID_API__ < 21
   fd = -1;
   errno = ENOSYS;
-#else
-  fd = epoll_create1(O_CLOEXEC);
-#endif
 
   /* epoll_create1() can fail either because it's not implemented (old kernel)
    * or because it doesn't understand the O_CLOEXEC flag.
@@ -293,16 +285,8 @@
         abort();
 
     if (no_epoll_wait != 0 || (sigmask != 0 && no_epoll_pwait == 0)) {
-#if defined(__ANDROID_API__) && __ANDROID_API__ < 21
       nfds = -1;
       errno = ENOSYS;
-#else
-      nfds = epoll_pwait(loop->backend_fd,
-                         events,
-                         ARRAY_SIZE(events),
-                         timeout,
-                         &sigset);
-#endif
       if (nfds == -1 && errno == ENOSYS)
         no_epoll_pwait = 1;
     } else {
diff -Nur node-v13.12.0-orig/deps/uv/src/unix/linux-inotify.c node-v13.12.0/deps/uv/src/unix/linux-inotify.c
--- node-v13.12.0-orig/deps/uv/src/unix/linux-inotify.c	2020-03-26 20:00:00.000000000 +0000
+++ node-v13.12.0/deps/uv/src/unix/linux-inotify.c	2020-04-10 05:33:29.349163903 +0000
@@ -71,9 +71,12 @@
   if (loop->inotify_fd != -1)
     return 0;
 
-  fd = inotify_init1(IN_NONBLOCK | IN_CLOEXEC);
+  fd = inotify_init();
   if (fd < 0)
     return UV__ERR(errno);
+  
+  uv__cloexec(fd, 1);
+  uv__nonblock_fcntl(fd, 1);
 
   loop->inotify_fd = fd;
   uv__io_init(&loop->inotify_read_watcher, uv__inotify_read, loop->inotify_fd);
diff -Nur node-v13.12.0-orig/deps/uv/src/unix/process.c node-v13.12.0/deps/uv/src/unix/process.c
--- node-v13.12.0-orig/deps/uv/src/unix/process.c	2020-03-26 20:00:00.000000000 +0000
+++ node-v13.12.0/deps/uv/src/unix/process.c	2020-04-10 05:23:56.815535457 +0000
@@ -113,7 +113,7 @@
 
 
 static int uv__make_socketpair(int fds[2]) {
-#if defined(__FreeBSD__) || defined(__linux__)
+#if defined(__FreeBSD__)
   if (socketpair(AF_UNIX, SOCK_STREAM | SOCK_CLOEXEC, 0, fds))
     return UV__ERR(errno);
 
@@ -140,7 +140,7 @@
 
 
 int uv__make_pipe(int fds[2], int flags) {
-#if defined(__FreeBSD__) || defined(__linux__)
+#if defined(__FreeBSD__)
   if (pipe2(fds, flags | O_CLOEXEC))
     return UV__ERR(errno);
 
